how to link server in eclipse :-
file -> new -> server -> Apache -> tomcat 8.5 -> 
now click on browse and go to path where we install tomcat 8.5
next* -> finish 

now you can check left side in navigator/package explorer you have
servers folder, that means server is linked. 
-----------------------------------------------------

bean
dao
util
controller 



facebook --> login.html 
				email / password 
					submit
					
					request -> email/password
				server --> 
				email/password get 
				db --> check(email,password) 
					response
				true -> home.html 
				false -> login.html [with error ] 
view:-				
login.html
home.html 

controller:-
	LoginController  
	logic				
	
db-dao:-
	LoginDao 
	email,password:check 
	true | false 
	
	
MVC design pattern / Architect

model [ bean / dao ] 
view  [ webcontent ] 
controller 	[ controller ] 
-----------------------------------------------------

now create 1 welcome.html and run 

-----------------------------------------------------
link servlet-api.jar 

project -> right click --> properties -> java build path --> lib -->
add External jar --> browse to lib folder which is inside apache tomcat folder -->
servlet-api.jar open 
order and exports -> selectall and apply-close 



signup ==> server ==> controller 
					  [ Servlet ] 

create servlet :- 
				  
class SignupServlet  extends HttpServlet{

		public void service(HttpServletRequest request,HttpServletResponse response){
		
		}
} 


-------------------------------

jsp -> java server pages / java servlet pages 

<% %> scriptlet --> java logic 
<%= %> expression  -> print 
<%!  %> declaration ->  instance variable 

-------------------------------------------------


input.jsp -> input --> submit--> servlet --> get validation --> process --> output 

500 request --> 

filter --> pre process { validation , authentication } 


filter -> servlet 

1) class  implements Filter 
2) override method -- logic
3) web.xml 

-------------------------------------------------------------
database -> 
		1) oracle 
		2) mysql#
		3) postgres#
		4) mongodb - nosql 
		5) mssql 

1: download driver - jar 
2: add jar into lib and link in your project [ add jar] 
3: connection logic 
		3.1 : database driver load 
		3.2 : open connection 
		
how to connect db ?  - logic 


		
---------------------------------------------------------------
JDBC 


1) jar / lib --> db vendor / drivers  --> 
					mysql


2) Db Connection Java APp 
	util -> DbConnection.java 
			driver
			url
			userName
			password 
			
	
-----------------------------------------------------------------

create table users (
	userId integer primary key auto_increment,
	firstName varchar(30),
	email varchar(30),
	password varchar(30)
);

-----------------------------------------------------------------
bean --> POJO -> plain old java object 


create table books (
	bookId integer primary key auto_increment,
	bookName varchar(30),
	price integer
);

----------------------------------------
 AddBook.jsp	
		name
		qty
		price 

		submit
	
	AddBookServlet 
		getParameter 
		validation 
		bean set all variable 
		dao -> insert 
		redirect ListBookServlet 

----------------------------------------
Listener 
gys -> listen temp
water tank -> listen level 




server -->	
		listener -> always listen the events 


listen --> server shutdown event --> close 
       --> server start event 	--> amazon connection / nse / bse 


nse bse --> price -> charge -> ? time ->  
aws google server -> time:[0.02*minutes] fix:[25$]--> pay as u grow 

	
	1) listener class 
	2) implements your required Listner interface 
	3) override method -logic 
	4) web.xml 
	
--------------------------------------------------------

Login.jsp

Welcome , Mihir 
	
	user info---> 1) cookie [ browser ] [ client side ] 
				  2) session [server side ] 
				  
				  
				  
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
				